给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.

//这个题目的思路，我基本上是知道的，但是还是没有完全自己想，勤思考，多练习
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        
        if(root == null){
            return 0;
        }
        if(root.left == null && root.right == null){
            return 1;//关键找到最后左右孩子都为空
        }
        int left_depth=0;
        int right_depth=0;
        if(root.left != null){
            left_depth = minDepth(root.left);
        }else{
            left_depth =  Integer.MAX_VALUE;//最大值的应用，如果只有左孩子或者右孩子为空，不能表示最小深度
        }
        if(root.right != null){
            right_depth = minDepth(root.right);
        }else{
            right_depth = Integer.MAX_VALUE;
        }
        
        return Math.min(left_depth,right_depth)+1;
    }
}