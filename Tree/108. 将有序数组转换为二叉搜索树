将一个按照升序排列的有序数组，转换为一棵高度平衡二叉搜索树。

本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。

示例:

给定有序数组: [-10,-3,0,5,9],

一个可能的答案是：[0,-3,9,-10,null,5]，它可以表示下面这个高度平衡二叉搜索树：

      0
     / \
   -3   9
   /   /
 -10  5
 
 基本复制网上答案，对题目理解不到位
 1.二叉搜索树：左子树所有节点都小于父节点，右子树所有节点都大于父节点
 2.二叉搜索树的中序遍历是递增的
 综上可知，解答本题的思路主要是，对数据进行递归二分，找到左右不分中间位置的值并与父节点进行比较
 大于则在左子树，小于则在右子树。
 
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        
        return CreateTree(nums,0,nums.length-1);
        
    }
    
    TreeNode CreateTree(int[] nums,int l,int r ){
        if(l>r) return null;
        int mid = (l+r+1)/2;
        TreeNode node = new TreeNode(0);
        
        node.val = nums[mid];
        node.left = CreateTree(nums,l,mid-1);
        node.right = CreateTree(nums,mid+1,r);
        return node;
    }
}