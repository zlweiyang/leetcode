给定两个由小写字母构成的字符串 A 和 B ，只要我们可以通过交换 A 中的两个字母得到与 B 相等的结果，就返回 true ；否则返回 false 。
示例 1：

输入： A = "ab", B = "ba"
输出： true
示例 2：

输入： A = "ab", B = "ab"
输出： false
示例 3:

输入： A = "aa", B = "aa"
输出： true
示例 4：

输入： A = "aaaaaaabc", B = "aaaaaaacb"
输出： true
示例 5：

输入： A = "", B = "aa"
输出： false
提示：

0 <= A.length <= 20000
0 <= B.length <= 20000
A 和 B 仅由小写字母构成。
class Solution {
public:
    bool buddyStrings(string A, string B) {
        
        int lenA = A.length();
        int lenB = B.length();
        char apre,bpre,anext,bnext;
        string astr="",bstr="";
        int count = 0;
        if(lenA != lenB){
            return false;
        }
        if(A == B){
            set<char>newstr (A.begin(),A.end());
            if(newstr.size() < A.size())
                return true;
        }
        for(int i=0;i<A.length();i++){
            if(A[i] != B[i]){
                apre = A[i];
                bpre = B[i];
                astr = A.substr(i+1);
                bstr = B.substr(i+1);
                count++;
                break;
            }   
        }
        for(int j=0;j<astr.length();j++){
            if(astr[j]!=bstr[j]){
                anext = astr[j];
                bnext = bstr[j];
                count++;
            }
        }
        
        if((apre == bnext)&&(bpre == anext)&&(count == 2))
        {
            return true;
        }
        return false;
    }
};


