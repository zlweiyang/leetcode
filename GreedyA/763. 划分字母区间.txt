字符串 S 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一个字母只会出现在其中的一个片段。返回一个表示每个字符串片段的长度的列表。

示例 1:

输入: S = "ababcbacadefegdehijhklij"
输出: [9,7,8]
解释:
划分结果为 "ababcbaca", "defegde", "hijhklij"。
每个字母最多出现在一个片段中。
像 "ababcbacadefegde", "hijhklij" 的划分是错误的，因为划分的片段数较少。

class Solution {
    public List<Integer> partitionLabels(String S) {
       
        int[] last = new int[26];
        for(int i = 0;i<S.length();++i){
            last[S.charAt(i) - 'a'] = i;//保存字母的最后一次的数组下标
        }
        
        int right = 0,left = 0;
        List<Integer> result = new ArrayList();
        for(int i = 0;i<S.length();++i){
            right = Math.max(right,last[S.charAt(i) - 'a']);//这个最大的数字代表着最后一个字母，所以只有当从左遍历至最大值时进行切分
            if(i==right){
                result.add(i-left+1);
                left = i+1;
            }
        }
        return result;
    }
}