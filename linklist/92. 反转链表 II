反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。

说明:
1 ≤ m ≤ n ≤ 链表长度。

示例:

输入: 1->2->3->4->5->NULL, m = 2, n = 4
输出: 1->4->3->2->5->NULL


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        
        ListNode *newHead = new ListNode(0);
        newHead->next = head;
        if(head == NULL || head->next ==NULL || m>=n) return head;
        
        ListNode *temp = newHead;
        for(int i=1;i<m;i++){
            temp = temp->next;
        }
        
        ListNode *first = temp->next;
        for(int j=0;j<n-m;j++){
            ListNode *tmp = first->next;
            first->next = tmp->next;
            //tmp->next = first->next;
            tmp->next = temp->next;
            temp->next = tmp;
        }
        
        return newHead->next;
        
    }
};