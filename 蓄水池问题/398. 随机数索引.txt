给定一个可能含有重复元素的整数数组，要求随机输出给定的数字的索引。 您可以假设给定的数字一定存在于数组中。

注意：
数组大小可能非常大。 使用太多额外空间的解决方案将不会通过测试。

示例:

int[] nums = new int[] {1,2,3,3,3};
Solution solution = new Solution(nums);

// pick(3) 应该返回索引 2,3 或者 4。每个索引的返回概率应该相等。
solution.pick(3);

// pick(1) 应该返回 0。因为只有nums[0]等于1。
solution.pick(1);


class Solution {
    
    int []nums;
    Random ran;

    public Solution(int[] nums) {
       this.nums = nums;//通过构造传递值给全局变量数组
       this.ran = new Random();//初始化随机对象ran
        
    }
    
    public int pick(int target) {
        int count=0;
        int result=0;
        for(int i=0;i<nums.length;i++){
            if(target!=nums[i])
                continue;//如果没有target等于nums[i]的则返回0，有则执行下面语句
            if(ran.nextInt(++count)==0)//第一次肯定0，第二次产生概率为1/2，依次类推，result可能会被覆盖
                result=i;
        }
        return result;
    }
}
