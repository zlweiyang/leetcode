在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> list = new ArrayList<>();//定义两层list
        //List<Integer> temp = new ArrayList<Integer>();
        if(numRows<=0){
            return list;
        }
        //temp.add(1);//首行首位为1
        //list.add(temp);
        for(int i=0;i<numRows;i++){//行数
            ArrayList<Integer> tem = new ArrayList<>();//
            //ArrayList<Integer> last = list.get(i-1);
            //tem.add(1);//每个list中的首位为1
            
            for(int j=0;j<=i;j++){//j代表一行内的数据第一个为1
                if(j == 0)
                    tem.add(1);
                else if(j == i)
                    tem.add(1);//最后一个为1
                else
                tem.add(list.get(i-1).get(j-1)+list.get(i-1).get(j));//上一行的前一个数据加上上一行的相同位置数，并添加到单层list
            }
                
                //tem.add(1);
                list.add(tem); 
            }
         
        return list; 
        
    }
}