一个由小写字母构成的字符串 S 中，包含由一些连续的相同字符所构成的分组。

例如，在字符串 S = "abbxxxxzyy" 中，就含有 "a", "bb", "xxxx", "z" 和 "yy" 这样的一些分组。

我们称所有包含大于或等于三个连续字符的分组为较大分组。找到每一个较大分组的起始和终止位置。

最终结果按照字典顺序输出。

示例 1:

输入: "abbxxxxzzy"
输出: [[3,6]]
解释: "xxxx" 是一个起始于 3 且终止于 6 的较大分组。
示例 2:

输入: "abc"
输出: []
解释: "a","b" 和 "c" 均不是符合要求的较大分组。


class Solution {
    public List<List<Integer>> largeGroupPositions(String S) {
        
        List<List<Integer>> result = new ArrayList<List<Integer>>();
       
        
        char[] arrstr = S.toCharArray();
        int left = 0;
        int right = 1;
        int count = 0;
        while(right<arrstr.length){
             List<Integer> temp = new ArrayList<Integer>();
            if(arrstr[left] == arrstr[right]){
                right++;
               if((right == arrstr.length)&&((right-left)>=3)){
                   temp.add(left);
                   temp.add(right-1);
                   result.add(temp);
               }
                
            }else{
                 count = right - left-1;
                if(count >=2){
                    temp.add(left);
                    temp.add(right-1);
                    result.add(temp);
                }
                left = right;
                right++;
                
            }
            
           // temp = null;
        }
        return result;
    }
}