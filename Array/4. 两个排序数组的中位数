
给定两个大小为 m 和 n 的有序数组 nums1 和 nums2 。

请找出这两个有序数组的中位数。要求算法的时间复杂度为 O(log (m+n)) 。

你可以假设 nums1 和 nums2 不同时为空。

示例 1:

nums1 = [1, 3]
nums2 = [2]

中位数是 2.0
示例 2:

nums1 = [1, 2]
nums2 = [3, 4]

中位数是 (2 + 3)/2 = 2.5

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int m = nums1.length;
        int n = nums2.length;
        double res = 0;
        int[] tmp = new int[m+n];
        for(int i=0;i<m+n;i++){
            if(i<m){
                tmp[i] = nums1[i];
            }else{
                tmp[i] = nums2[i-m];
            }
        }
        
        Arrays.sort(tmp);
        if((m+n)%2 != 0){
            res = tmp[(m+n)/2]; 
        }else{
            res = (double)(tmp[(m+n)/2] + tmp[(m+n)/2 -1])/2;
        }
        
        return res;
    }
}